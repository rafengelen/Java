{
	"info": {
		"_postman_id": "c6683a0e-d057-4dda-8b65-96bc9db599eb",
		"name": "Test breads",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "test all breads sorted by price",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"GET-request is successful\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var expectedJsonBody =\r",
							"[\r",
							"    {\r",
							"        \"id\": 2,\r",
							"        \"name\": \"white bread\",\r",
							"        \"price\": 2.4\r",
							"    },\r",
							"    {\r",
							"        \"id\": 4,\r",
							"        \"name\": \"wholemeal bread\",\r",
							"        \"price\": 2.5\r",
							"    },\r",
							"    {\r",
							"        \"id\": 3,\r",
							"        \"name\": \"multigrain bread\",\r",
							"        \"price\": 2.6\r",
							"    },\r",
							"    {\r",
							"        \"id\": 1,\r",
							"        \"name\": \"nut bread\",\r",
							"        \"price\": 3.2\r",
							"    }\r",
							"]\r",
							"\r",
							"responseArray = JSON.parse(responseBody);\r",
							"pm.test('Correct resultset', () => {\r",
							"    pm.expect(responseArray).to.eql(expectedJsonBody);    \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/api/breads",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"breads"
					]
				}
			},
			"response": []
		},
		{
			"name": "test search breads with name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"GET-request is successful\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var expectedJsonBody =\r",
							"[\r",
							"    {\r",
							"        \"id\": 2,\r",
							"        \"name\": \"white bread\",\r",
							"        \"price\": 2.4\r",
							"    },\r",
							"    {\r",
							"        \"id\": 4,\r",
							"        \"name\": \"wholemeal bread\",\r",
							"        \"price\": 2.5\r",
							"    }\r",
							"]\r",
							"\r",
							"responseArray = JSON.parse(responseBody);\r",
							"pm.test('Correct resultset', () => {\r",
							"    pm.expect(responseArray).to.eql(expectedJsonBody);    \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "wh",
					"options": {
						"raw": {
							"language": "text"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/breads/search",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"breads",
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "test search cheapest bread",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"GET-request is successful\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var expectedJsonBody =\r",
							"[\r",
							"    {\r",
							"        \"id\": 2,\r",
							"        \"name\": \"white bread\",\r",
							"        \"price\": 2.4\r",
							"    }\r",
							"]\r",
							"\r",
							"responseArray = JSON.parse(responseBody);\r",
							"pm.test('Correct resultset', () => {\r",
							"    pm.expect(responseArray).to.eql(expectedJsonBody);    \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/breads/searchcheapest",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"breads",
						"searchcheapest"
					]
				}
			},
			"response": []
		},
		{
			"name": "test create new bread",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"POST-request is successful\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var expectedJsonBody =\r",
							"\r",
							"{\r",
							"    \"id\": 5,\r",
							"    \"name\": \"new bread\",\r",
							"    \"price\": 2.1\r",
							"}\r",
							"\r",
							"\r",
							"responseArray = JSON.parse(responseBody);\r",
							"pm.test('Correct resultset', () => {\r",
							"    pm.expect(responseArray).to.eql(expectedJsonBody);    \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\r\n        \"name\": \"new bread\",\r\n        \"price\": 2.1\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/breads",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"breads"
					]
				}
			},
			"response": []
		},
		{
			"name": "test update bread",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"PUT-request is successful\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var expectedJsonBody =\r",
							"{\r",
							"    \"id\": 2,\r",
							"    \"name\": \"white bread renewed\",\r",
							"    \"price\": 2.7\r",
							"}\r",
							"\r",
							"responseArray = JSON.parse(responseBody);\r",
							"pm.test('Correct resultset', () => {\r",
							"    pm.expect(responseArray).to.eql(expectedJsonBody);    \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"name\": \"white bread renewed\",\r\n        \"price\": 2.7\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/breads/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"breads",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "test delete bread",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"DELETE-request is successful\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"4\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/breads/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"breads",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "test if bread is deleted",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Bread is successful deleted\", function(){\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"4\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "n"
				},
				"url": {
					"raw": "http://localhost:8080/api/breads/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"breads",
						"1"
					]
				}
			},
			"response": []
		}
	]
}